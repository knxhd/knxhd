(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{450:function(t,a,s){"use strict";s.r(a);var r=s(2),e=Object(r.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"java内存模型的抽象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java内存模型的抽象"}},[t._v("#")]),t._v(" Java内存模型的抽象")]),t._v(" "),a("blockquote",[a("p",[t._v("在Java中，所有的实例域、静态域和数组元素都存储在堆内存中。堆内存中变量在各个线程中可以共享。而局部变量、方法参数和异常参数等，不会在线程之间共享，他们不会存在内存可见性问题，也不会受内存模型的影响。")])]),t._v(" "),a("blockquote",[a("p",[t._v("线程之间的通信是空过Java内存模型来控制的。线程A和线程B共享主内存中的变量，线程A读取内存中的数据到主线程中，然后修改数据后，再将数据写入到主线程中，线程B通过主线程读取到修改后的变量，此过程称之为线程之间的通信。")])]),t._v(" "),a("h3",{attrs:{id:"重排序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重排序"}},[t._v("#")]),t._v(" 重排序")])])}),[],!1,null,null,null);a.default=e.exports}}]);