(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{481:function(t,s,a){"use strict";a.r(s);var n=a(2),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"程序基本格式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#程序基本格式"}},[t._v("#")]),t._v(" 程序基本格式")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Python中不区分大小写")])]),t._v(" "),s("li",[s("p",[t._v("Python中的结构区分采用空格和占位符来标识，没有大括号这种形式。这里需要注意的是占位符和空格数目要相同")])]),t._v(" "),s("li",[s("p",[t._v("Python的注释形式")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("行内形式： #")])]),t._v(" "),s("li",[s("p",[t._v("多行注释：三个单引号或者双引号来表示，例如")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v("'''\n多行注释\n'''")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""\n多行注释\n"""')]),t._v("\n")])])])])])])]),t._v(" "),s("h2",{attrs:{id:"基础知识"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基础知识"}},[t._v("#")]),t._v(" 基础知识")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("标识符：用于变量、函数、类、模块等名称")])]),t._v(" "),s("li",[s("p",[t._v("变量名必须以字母开头")])]),t._v(" "),s("li",[s("p",[t._v("标识符不能使用关键字")])]),t._v(" "),s("li",[s("p",[t._v("可通过help() -- keywords查看关键")])]),t._v(" "),s("li",[s("p",[t._v("命名规则")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("模块和包名")]),t._v(" "),s("p",[t._v("全部小写字母，多个单词下划线隔开")])]),t._v(" "),s("li",[s("p",[t._v("函数名")]),t._v(" "),s("p",[t._v("全小写字母，多个单词使用下划线隔开")])]),t._v(" "),s("li",[s("p",[t._v("类名")]),t._v(" "),s("p",[t._v("首字母大写，采用驼峰状写法")])]),t._v(" "),s("li",[s("p",[t._v("常量名")]),t._v(" "),s("p",[t._v("全部大写字母，多个单词使用下划线隔开")])])])])]),t._v(" "),s("h2",{attrs:{id:"赋值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#赋值"}},[t._v("#")]),t._v(" 赋值")]),t._v(" "),s("h3",{attrs:{id:"_1-链式赋值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-链式赋值"}},[t._v("#")]),t._v(" 1. 链式赋值")]),t._v(" "),s("p",[t._v("链式赋值用于将同一个对象赋值给多个变量，例如")]),t._v(" "),s("p",[t._v("x=y=30 相当于 x=30; y=30")]),t._v(" "),s("h3",{attrs:{id:"_2-系列解包赋值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-系列解包赋值"}},[t._v("#")]),t._v(" 2. 系列解包赋值")]),t._v(" "),s("p",[t._v("系列数据赋值给多个变量，例如")]),t._v(" "),s("p",[t._v("a,b,c=10,20,30相当于a=10;b=20;c=30")]),t._v(" "),s("h3",{attrs:{id:"_3-常量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-常量"}},[t._v("#")]),t._v(" 3. 常量")]),t._v(" "),s("p",[t._v("Python不支持常量，只能通过大小写来规定是否为常量，但是依然可以修改")]),t._v(" "),s("h2",{attrs:{id:"运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#运算符"}},[t._v("#")]),t._v(" 运算符")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("//")]),t._v(" 表示整除\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v(" 表示幂\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" 求余\n")])])]),s("h3",{attrs:{id:"判断语句"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#判断语句"}},[t._v("#")]),t._v(" 判断语句")]),t._v(" "),s("blockquote",[s("ol",[s("li",[s("p",[t._v("Python可以指定非0或非空值为true，0或None非false")])]),t._v(" "),s("li",[s("p",[t._v("if控制语句格式如下：")])])]),t._v(" "),s("ul",[s("li",[t._v("【elif】为其他情况")]),t._v(" "),s("li",[t._v("每个判断条件后需要加冒号")])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" 判断条件"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t 执行语句\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("elif")]),t._v(" 判断条件"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t 执行语句\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n   执行语句\n")])])])]),t._v(" "),s("h2",{attrs:{id:"循环语句"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#循环语句"}},[t._v("#")]),t._v(" 循环语句")]),t._v(" "),s("blockquote",[s("p",[t._v("在循环语句中，可以使用break、continue，pass三种控制循环")]),t._v(" "),s("ol",[s("li",[t._v("break：跳出循环")]),t._v(" "),s("li",[t._v("continue：跳出本次循环")]),t._v(" "),s("li",[t._v("pass：占位符，没有实际意义")])])]),t._v(" "),s("h3",{attrs:{id:"for循环"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#for循环"}},[t._v("#")]),t._v(" for循环")]),t._v(" "),s("blockquote",[s("ol",[s("li",[t._v("for...i...形式")])]),t._v(" "),s("ul",[s("li",[t._v("循环数字")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("for i in range(10):\n\tprint(i)\n")])])]),s("ul",[s("li",[t._v("自增循环")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# 参数1:初始值 参数2:最大范围 参数3:自增\nfor i in range(1, 10, 2):\n\tprint(i)\n")])])]),s("ul",[s("li",[t._v("循环数组")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('a = ["aa", "bb", "cc", "dd"]\nfor i in range(len(a)):\n\tprint(a[i])\n')])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("foreach形式")])]),t._v(" "),s("ul",[s("li",[t._v("循环字符")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('a = "chengdu"\nfor i in a:\n\tprint(i)\n')])])]),s("ul",[s("li",[t._v("循环数组")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('a = ["aa", "bb", "cc", "dd"]\nfor i in a:\n\tprint(i)\n')])])])]),t._v(" "),s("h3",{attrs:{id:"while循环"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#while循环"}},[t._v("#")]),t._v(" while循环")]),t._v(" "),s("blockquote",[s("ul",[s("li",[t._v("和其他语言类似情况")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("a = 0\nwhile a < 5:\n\tprint(a)\n\ta+=1\n")])])]),s("ul",[s("li",[t._v("while中也可以使用else")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('a = 0\nwhile a < 5:\n\tprint(a)\n\ta+=1\nelse:\n\tprint("不满足条件")\n')])])])]),t._v(" "),s("h2",{attrs:{id:"字符串、列表、元组、字典"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符串、列表、元组、字典"}},[t._v("#")]),t._v(" 字符串、列表、元组、字典")]),t._v(" "),s("h3",{attrs:{id:"字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符串"}},[t._v("#")]),t._v(" 字符串")]),t._v(" "),s("ul",[s("li",[t._v("Python的核心数据类型")])]),t._v(" "),s("blockquote",[s("ul",[s("li",[t._v("Python字符串可以用"),s("code",[t._v("单引号")]),t._v("、"),s("code",[t._v("双引号")]),t._v("、"),s("code",[t._v("三引号(三个单引号或三个双引号)")]),t._v(",使用"),s("code",[t._v("\\")]),t._v("表示转义字符")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("三引号可以保存输入字符串的格式，例如：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输出时可以保存格式")]),t._v("\nparagraph "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""\n      这是一个段落\n      可以由多行组成\n"""')]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("单引号和双引号")])])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Python3源码文件默认以UTF-8编码，所有字符都是unicode字符")])]),t._v(" "),s("li",[s("p",[t._v("支持字符串的拼接、截取等多种运算")])])])]),t._v(" "),s("h3",{attrs:{id:"常用转义字符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常用转义字符"}},[t._v("#")]),t._v(" 常用转义字符")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("转义字符")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("\\\\")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("反斜杠符号")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("\\'")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("单引号")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v('\\"')]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("双引号")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("\\n")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("换行")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("\\a")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("响铃")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("\\b")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("退格")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("\\000")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("空")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("\\n")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("换行")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("\\t")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("制表符")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}})])])]),t._v(" "),s("h3",{attrs:{id:"修改字符串的大小写"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#修改字符串的大小写"}},[t._v("#")]),t._v(" 修改字符串的大小写")]),t._v(" "),s("ul",[s("li",[t._v("title()")])]),t._v(" "),s("blockquote",[s("p",[t._v("将文本首字母大写转换")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("word "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello world"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("word"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("title"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输出：Hello World")]),t._v("\n")])])])]),t._v(" "),s("ul",[s("li",[t._v("upper()")])]),t._v(" "),s("blockquote",[s("p",[t._v("将文本全部大写转换")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("word "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello world"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("word"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("upper"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输出：HELLO WORLD")]),t._v("\n")])])])]),t._v(" "),s("ul",[s("li",[t._v("lower()")])]),t._v(" "),s("blockquote",[s("p",[t._v("将文本全部小写转换")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("word "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello World"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("word"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lower"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输出：hello world")]),t._v("\n")])])])]),t._v(" "),s("ul",[s("li",[t._v("islower()")])]),t._v(" "),s("blockquote",[s("p",[t._v("判断文本是否全部小写，如果为中文，则为False")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("word "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello world"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("word"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("islower"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输出：True")]),t._v("\n")])])])]),t._v(" "),s("ul",[s("li",[t._v("isupper()")])]),t._v(" "),s("blockquote",[s("p",[t._v("判断文本是否全部大写，如果为中文，则为False")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("word "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello world"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("word"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isupper"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输出：True")]),t._v("\n")])])])]),t._v(" "),s("h2",{attrs:{id:"运算函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#运算函数"}},[t._v("#")]),t._v(" 运算函数")]),t._v(" "),s("h3",{attrs:{id:"截取字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#截取字符串"}},[t._v("#")]),t._v(" 截取字符串")]),t._v(" "),s("blockquote",[s("ul",[s("li",[t._v("基本形式 str[起始位置:结束位置:步进值]，起始位置为开始截取位置(包含该位置)、结束位置(不包含该位置)、步进值(跳着截取长度)")])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"名侦探柯南，柯南：真相只有一个"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 从0截取，截取一个 结果：名")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 从0开始截取，截取到第3位，结果：名侦探")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 从1开始截取，截取到第7位，每次跳2个， 结果位：侦柯，")]),t._v("\n")])])]),s("ul",[s("li",[t._v("简写模式")])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 结束位置为最后")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 起始位置为第一位")]),t._v("\n")])])])]),t._v(" "),s("h3",{attrs:{id:"拼接字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#拼接字符串"}},[t._v("#")]),t._v(" 拼接字符串")]),t._v(" "),s("blockquote",[s("ul",[s("li",[t._v("使用+号连接 "),s("code",[t._v('print(str + ",你好")')])]),t._v(" "),s("li",[t._v("使用*号连续输出"),s("code",[t._v("print(str*3)")]),t._v(",连续输出三次"),s("code",[t._v("str")])]),t._v(" "),s("li",[t._v("使用r可以取消正则表达式功能"),s("code",[t._v('print(r"江户川柯南\\n灰原哀"),')]),t._v("\\n"),s("code",[t._v("转义字符不再生效，结果为：")]),t._v("江户川柯南\\n灰原哀")])])]),t._v(" "),s("h3",{attrs:{id:"内置函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内置函数"}},[t._v("#")]),t._v(" 内置函数")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("方法")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("capitalize()")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("首字母大写")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("center(length, word)")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("字符串居中，length表示长度，word表示填充的字符串，不足填充该字符串")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("count(sub, start, end)")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("统计字符串sub出现的次数，start和end表示统计范围")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("[string.decode(encoding='UTF-8', errors='strict')]")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("以 encoding 指定的编码格式解码 string，如果出错默认报一个 ValueError 的 异 常 ， 除 非 errors 指 定 的 是 'ignore' 或 者'replace'")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("a",{attrs:{href:"https://www.w3cschool.cn/python/att-string-encode.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("string.encode(encoding='UTF-8', errors='strict')"),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("以 encoding 指定的编码格式编码 string，如果出错默认报一个ValueError 的异常，除非 errors 指定的是'ignore'或者'replace'")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("strong",[s("a",{attrs:{href:"https://www.w3cschool.cn/python/att-string-endswith.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("string.endswith(obj, beg=0, end=len(string))"),s("OutboundLink")],1)])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("检查字符串是否以 obj 结束，如果beg 或者 end 指定则检查指定的范围内是否以 obj 结束，如果是，返回 True,否则返回 False.")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("a",{attrs:{href:"https://www.w3cschool.cn/python/att-string-expandtabs.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("string.expandtabs(tabsize=8)"),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("把字符串 string 中的 tab 符号转为空格，默认的空格数 tabsize 是 8.")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("strong",[s("a",{attrs:{href:"https://www.w3cschool.cn/python/att-string-find.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("string.find(str, beg=0, end=len(string))"),s("OutboundLink")],1)])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("检测 str 是否包含在 string 中，如果 beg 和 end 指定范围，则检查是否包含在指定范围内，如果是返回开始的索引值，否则返回-1")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("strong",[s("a",{attrs:{href:"https://www.w3cschool.cn/python/att-string-index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("string.index(str, beg=0, end=len(string))"),s("OutboundLink")],1)])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("跟 find() 方法一样，只不过如果 str 不在 string 中会报一个异常.")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("a",{attrs:{href:"https://www.w3cschool.cn/python/att-string-isalnum.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("string.isalnum()"),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("如果 string 至少有一个字符并且所有字符都是字母或数字则返回 True,否则返回 False")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("a",{attrs:{href:"https://www.w3cschool.cn/python/att-string-isalpha.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("string.isalpha()"),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("如果 string 至少有一个字符并且所有字符都是字母则返回 True,否则返回 False")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("a",{attrs:{href:"https://www.w3cschool.cn/python/att-string-isdecimal.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("string.isdecimal()"),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("如果 string 只包含十进制数字则返回 True 否则返回 False.")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("a",{attrs:{href:"https://www.w3cschool.cn/python/att-string-isdigit.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("string.isdigit()"),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("如果 string 只包含数字则返回 True 否则返回 False.")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("a",{attrs:{href:"https://www.w3cschool.cn/python/att-string-islower.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("string.islower()"),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("如果 string 中包含至少一个区分大小写的字符，并且所有这些(区分大小写的)字符都是小写，则返回 True，否则返回 False")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("a",{attrs:{href:"https://www.w3cschool.cn/python/att-string-isnumeric.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("string.isnumeric()"),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("如果 string 中只包含数字字符，则返回 True，否则返回 False")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("a",{attrs:{href:"https://www.w3cschool.cn/python/att-string-isspace.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("string.isspace()"),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("如果 string 中只包含空格，则返回 True，否则返回 False.")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("a",{attrs:{href:"https://www.w3cschool.cn/python/att-string-istitle.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("string.istitle()"),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("如果 string 是标题化的 (见 title()) 则返回 True，否则返回 False")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("a",{attrs:{href:"https://www.w3cschool.cn/python/att-string-isupper.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("string.isupper()"),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("如果 string 中包含至少一个区分大小写的字符，并且所有这些(区分大小写的)字符都是大写，则返回 True，否则返回 False")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("strong",[s("a",{attrs:{href:"https://www.w3cschool.cn/python/att-string-join.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("string.join(seq)"),s("OutboundLink")],1)])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("Merges (concatenates)以 string 作为分隔符，将 seq 中所有的元素(的字符串表示)合并为一个新的字符串")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("a",{attrs:{href:"https://www.w3cschool.cn/python/att-string-ljust.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("string.ljust(width)"),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("返回一个原字符串左对齐,并使用空格填充至长度 width 的新字符串")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("a",{attrs:{href:"https://www.w3cschool.cn/python/att-string-lower.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("string.lower()"),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("转换 string 中所有大写字符为小写.")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("a",{attrs:{href:"https://www.w3cschool.cn/python/att-string-lstrip.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("string.lstrip()"),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("截掉 string 左边的空格")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("a",{attrs:{href:"https://www.w3cschool.cn/python/att-string-maketrans.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("string.maketrans(intab, outtab])"),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("maketrans() 方法用于创建字符映射的转换表，对于接受两个参数的最简单的调用方式，第一个参数是字符串，表示需要转换的字符，第二个参数也是字符串表示转换的目标。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("a",{attrs:{href:"https://www.w3cschool.cn/python/att-string-max.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("max(str)"),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("返回字符串 "),s("em",[t._v("str")]),t._v(" 中最大的字母。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("a",{attrs:{href:"https://www.w3cschool.cn/python/att-string-min.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("min(str)"),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("返回字符串 "),s("em",[t._v("str")]),t._v(" 中最小的字母。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("strong",[s("a",{attrs:{href:"https://www.w3cschool.cn/python/att-string-partition.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("string.partition(str)"),s("OutboundLink")],1)])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("有点像 find()和 split() 的结合体,从 str 出现的第一个位置起,把 字 符 串 string 分 成 一 个 3 元 素 的 元 组 (string_pre_str,str,string_post_str),如果 string 中不包含str 则 string_pre_str == string.")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("strong",[s("a",{attrs:{href:"https://www.w3cschool.cn/python/att-string-replace.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("string.replace(str1, str2, num=string.count(str1))"),s("OutboundLink")],1)])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("把 string 中的 str1 替换成 str2,如果 num 指定，则替换不超过 num 次.")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("a",{attrs:{href:"https://www.w3cschool.cn/python/att-string-rfind.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("string.rfind(str, beg=0,end=len(string) )"),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("类似于 find()函数，不过是从右边开始查找.")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("a",{attrs:{href:"https://www.w3cschool.cn/python/att-string-rindex.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("string.rindex( str, beg=0,end=len(string))"),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("类似于 index()，不过是从右边开始.")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("a",{attrs:{href:"https://www.w3cschool.cn/python/att-string-rjust.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("string.rjust(width)"),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("返回一个原字符串右对齐,并使用空格填充至长度 width 的新字符串")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("a",{attrs:{href:"https://www.w3cschool.cn/python/att-string-rpartition.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("string.rpartition(str)"),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("类似于 partition()函数,不过是从右边开始查找.")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("a",{attrs:{href:"https://www.w3cschool.cn/python/att-string-rstrip.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("string.rstrip()"),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("删除 string 字符串末尾的空格.")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("strong",[s("a",{attrs:{href:"https://www.w3cschool.cn/python/att-string-split.html",target:"_blank",rel:"noopener noreferrer"}},[t._v('string.split(str="", num=string.count(str))'),s("OutboundLink")],1)])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("以 str 为分隔符切片 string，如果 num有指定值，则仅分隔 num 个子字符串")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("a",{attrs:{href:"https://www.w3cschool.cn/python/att-string-splitlines.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("string.splitlines(num=string.count('\\n'))"),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("按照行分隔，返回一个包含各行作为元素的列表，如果 num 指定则仅切片 num 个行.")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("a",{attrs:{href:"https://www.w3cschool.cn/python/att-string-startswith.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("string.startswith(obj, beg=0,end=len(string))"),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("检查字符串是否是以 obj 开头，是则返回 True，否则返回 False。如果beg 和 end 指定值，则在指定范围内检查.")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("[string.strip("),s("a",{attrs:{href:"https://www.w3cschool.cn/python/att-string-strip.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("obj])"),s("OutboundLink")],1)])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("在 string 上执行 lstrip()和 rstrip()")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("a",{attrs:{href:"https://www.w3cschool.cn/python/att-string-swapcase.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("string.swapcase()"),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("翻转 string 中的大小写")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("a",{attrs:{href:"https://www.w3cschool.cn/python/att-string-title.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("string.title()"),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v('返回"标题化"的 string,就是说所有单词都是以大写开始，其余字母均为小写(见 istitle())')])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("strong",[s("a",{attrs:{href:"https://www.w3cschool.cn/python/att-string-translate.html",target:"_blank",rel:"noopener noreferrer"}},[t._v('string.translate(str, del="")'),s("OutboundLink")],1)])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("根据 str 给出的表(包含 256 个字符)转换 string 的字符,要过滤掉的字符放到 del 参数中")])])])]),t._v(" "),s("h2",{attrs:{id:"列表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#列表"}},[t._v("#")]),t._v(" 列表")]),t._v(" "),s("ul",[s("li",[t._v("List(列表)")])]),t._v(" "),s("blockquote",[s("ul",[s("li",[t._v("列表中可以放不同的数据类型")]),t._v(" "),s("li",[t._v("列表索引值以0开始，-1位末尾的开始位置")]),t._v(" "),s("li",[t._v("列表可以用+号表示拼接，使用*表示重复")]),t._v(" "),s("li",[t._v("支持for...i...和foreach循环语句")])])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("nameList "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"柯南"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"灰原哀"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"原太"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"步美"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"光彦"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9527")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nameList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nameList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nameList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("len")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nameList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nameList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 类型为int，而不会自动转换为字符串")]),t._v("\n\nwordList "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"琴酒"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"伏特加"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"贝尔摩德"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"朗伯"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6782")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nameList "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" wordList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 数组合并")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("wordList "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 数组重复")]),t._v("\n")])])]),s("h3",{attrs:{id:"内置方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内置方法"}},[t._v("#")]),t._v(" 内置方法")]),t._v(" "),s("ul",[s("li",[t._v("方法分为增删该查和排序五个主要的操作")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("操作名称")]),t._v(" "),s("th",[t._v("描述")]),t._v(" "),s("th",[t._v("举例")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("【增】append(object)")]),t._v(" "),s("td",[t._v("在末尾增加一个元素，可以是数组对象，数组对象作为一个完整的元素存在")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("【增】extend(object)")]),t._v(" "),s("td",[t._v("在末尾扩展，可以是数组对象，如果是数组，则会将数组元素拼接到元素中")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("【增】insert(index, object)")]),t._v(" "),s("td",[t._v("在指定位置添加一个元素")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("【增】使用+拼接")]),t._v(" "),s("td",[t._v("效率相对不高")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("【删】del")]),t._v(" "),s("td",[t._v("删除某个元素")]),t._v(" "),s("td",[t._v("del nameList[3]")])]),t._v(" "),s("tr",[s("td",[t._v("【删】pop(index)")]),t._v(" "),s("td",[t._v("删除指定位置元素")]),t._v(" "),s("td",[t._v("name.pop(3)")])]),t._v(" "),s("tr",[s("td",[t._v("【删】remove(object)")]),t._v(" "),s("td",[t._v("删除指定元素")]),t._v(" "),s("td",[t._v('remove("柯南")')])]),t._v(" "),s("tr",[s("td",[t._v("【查】in")]),t._v(" "),s("td",[t._v("查询元素是否存在")]),t._v(" "),s("td",[t._v('"柯南" in nameList')])]),t._v(" "),s("tr",[s("td",[t._v("【查】not in")]),t._v(" "),s("td",[t._v("查询元素是否不在")]),t._v(" "),s("td",[t._v('"柯南" not in nameList')])]),t._v(" "),s("tr",[s("td",[t._v("【查】index(object, start, end)")]),t._v(" "),s("td",[t._v("可以查询指定范围的元素，返回元素索引,找不到会抛出异常")]),t._v(" "),s("td",[t._v('nameList.index("步美", 3, 10)')])]),t._v(" "),s("tr",[s("td",[t._v("【查】count(object)")]),t._v(" "),s("td",[t._v("查询object出现的次数")]),t._v(" "),s("td",[t._v('nameList.count("步美")')])]),t._v(" "),s("tr",[s("td",[t._v("【反转】reverse")]),t._v(" "),s("td",[t._v("数组反转")]),t._v(" "),s("td",[t._v("nameList.reverse()")])]),t._v(" "),s("tr",[s("td",[t._v("【排序】sort(option)")]),t._v(" "),s("td",[t._v("排序,默认正序，反序时，option为reverse=True，可以不写。排序时数据类型必须一致")]),t._v(" "),s("td",[t._v("nameList.sort(reverse=True)")])])])]),t._v(" "),s("h3",{attrs:{id:"tuple元祖"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tuple元祖"}},[t._v("#")]),t._v(" Tuple元祖")]),t._v(" "),s("blockquote",[s("ul",[s("li",[t._v("tuple和list类似，使用小括号表示，多个用逗号隔开")]),t._v(" "),s("li",[t._v("如果仅仅包含一个元素，则必须加逗号,不加逗号，是普通的数据类型")]),t._v(" "),s("li",[t._v("元祖的元素不可变，但是可以包含可变对象，例如list")])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("tuple")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("tuple")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 不加元祖，则默认为int")]),t._v("\ntuple2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\ntuple1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tuple1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("ul",[s("li",[t._v("元祖不能直接修改里面的元素，但是可以通过+号扩展成一个新的元祖，删除所有的元祖")])])]),t._v(" "),s("h4",{attrs:{id:"新增"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#新增"}},[t._v("#")]),t._v(" 新增")]),t._v(" "),s("blockquote",[s("ul",[s("li",[t._v("使用+号可以扩展之前的元祖")])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("tup "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("34")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ntup2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"11"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ed"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"rf"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ntup3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tup "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" tup2\n")])])])]),t._v(" "),s("h4",{attrs:{id:"删除"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#删除"}},[t._v("#")]),t._v(" 删除")]),t._v(" "),s("blockquote",[s("ul",[s("li",[t._v("使用del可以将整个元祖删除")])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("tup "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("del")]),t._v(" tup\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tup"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""\n执行会出现tup未定义的异常，这是由于使用del会将整个对象删除\n"""')]),t._v("\n")])])])]),t._v(" "),s("h4",{attrs:{id:"查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查询"}},[t._v("#")]),t._v(" 查询")]),t._v(" "),s("blockquote",[s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" item "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" tuple3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),s("h3",{attrs:{id:"dict-字典"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dict-字典"}},[t._v("#")]),t._v(" dict(字典)")]),t._v(" "),s("blockquote",[s("ul",[s("li",[t._v("字典是无序对象集合，使用键-值对表示")]),t._v(" "),s("li",[t._v("键(key)是不可变类型")])])]),t._v(" "),s("h4",{attrs:{id:"基本使用方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本使用方式"}},[t._v("#")]),t._v(" 基本使用方式")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("person "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"柯南小海盗"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"age"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"child"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"柯南"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"age"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"灰原"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"age"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 字典访问，使用此方法，如果key不存在，则会抛出异常")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("person"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用get进行访问,如果不存在，则返回None，相当于其他语言中的null")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("person"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 同时get还可以设置默认值，如果返回None时，可以使用默认值")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("person"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"小五郎"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h5",{attrs:{id:"增加和修改元素"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#增加和修改元素"}},[t._v("#")]),t._v(" 增加和修改元素")]),t._v(" "),s("blockquote",[s("ul",[s("li",[t._v("新增和修改方式和js类似，"),s("code",[t._v('person["key"] = value')])])])]),t._v(" "),s("h5",{attrs:{id:"删除元素"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#删除元素"}},[t._v("#")]),t._v(" 删除元素")]),t._v(" "),s("blockquote",[s("ul",[s("li",[t._v("删除操作有两种，即del和clear，前者是删除整个对象，后者是清空其中的元素")])]),t._v(" "),s("ol",[s("li",[t._v("del person # 删除整个对象")]),t._v(" "),s("li",[t._v("person.clear() # 清空整个对象")]),t._v(" "),s("li",[t._v('del person["name"] #删除name这个元素')])])]),t._v(" "),s("h5",{attrs:{id:"查询元素"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查询元素"}},[t._v("#")]),t._v(" 查询元素")]),t._v(" "),s("blockquote",[s("ul",[s("li",[t._v("查询有两种方式，即查询所有的键和插叙所有的值")]),t._v(" "),s("li",[t._v("查询键使用keys()方法")]),t._v(" "),s("li",[t._v("查询值使用values()方法")]),t._v(" "),s("li",[t._v("查询所有的项，使用items()方法")])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" key "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" person"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("keys"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" value "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" person"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("values"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" item "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" person"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("items"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" person"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("items"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("ul",[s("li",[t._v("遍历所有的元素")])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" key "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" person"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("keys"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"k：%s, value：%s"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" person"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),s("h3",{attrs:{id:"函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数"}},[t._v("#")]),t._v(" 函数")]),t._v(" "),s("h4",{attrs:{id:"定义函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#定义函数"}},[t._v("#")]),t._v(" 定义函数")]),t._v(" "),s("ul",[s("li",[t._v("无参数无返回值")])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"---"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("ul",[s("li",[t._v("带参数函数")])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("ul",[s("li",[t._v("带返回值函数")])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b\n")])])]),s("ul",[s("li",[t._v("带多个返回的函数")])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("devid")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  shang "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" b\n  yushu "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" b\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" shang"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" yushu\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 函数调用方式1")]),t._v("\nsh"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" yu "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" devid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 结果：sh = 2.5, yu = 1")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 函数调用方式2:")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 结果为Set集合存储结果")]),t._v("\na "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" devid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 结果：a = (2.5, 1)")]),t._v("\n")])])]),s("h4",{attrs:{id:"enumerate-枚举函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#enumerate-枚举函数"}},[t._v("#")]),t._v(" enumerate(枚举函数)")]),t._v(" "),s("h4",{attrs:{id:"list转枚举"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#list转枚举"}},[t._v("#")]),t._v(" list转枚举")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("mylist "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"b"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"c"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"d"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("v "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("enumerate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mylist"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("v"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  \n"),s("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""\n 输出结果为：\n 0 a\n 1 b\n 2 c\n 3 d\n"""')]),t._v("  \n")])])]),s("h2",{attrs:{id:"引入模块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#引入模块"}},[t._v("#")]),t._v(" 引入模块")]),t._v(" "),s("blockquote",[s("ul",[s("li",[t._v("在Python中，使用import或者from ... import来导入相应的模块")]),t._v(" "),s("li",[t._v("将整个模块(module)导入，格式为 "),s("code",[t._v("import somemodule")])]),t._v(" "),s("li",[t._v("从某个模块引入某个函数："),s("code",[t._v("from somemodule import somefunction")])]),t._v(" "),s("li",[t._v("从某个模块引入多个函数："),s("code",[t._v("from somemodule from somefunction, somefunctoin2")])]),t._v(" "),s("li",[t._v("从某个模块引入全部函数："),s("code",[t._v("from somemodule import \\*")])])])])])}),[],!1,null,null,null);s.default=e.exports}}]);