(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{480:function(t,v,_){"use strict";_.r(v);var a=_(2),s=Object(a.a)({},(function(){var t=this,v=t._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("blockquote",[v("ul",[v("li",[t._v("官方文档：https://docs.python.org/zh-cn/3.8/library/re.html#module-contents")])])]),t._v(" "),v("h2",{attrs:{id:"基本符号"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#基本符号"}},[t._v("#")]),t._v(" 基本符号")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("符号")]),t._v(" "),v("th",[t._v("解释")]),t._v(" "),v("th",[t._v("示例")]),t._v(" "),v("th",[t._v("说明")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v(".")]),t._v(" "),v("td",[t._v("匹配任意字符")]),t._v(" "),v("td",[t._v("b.t")]),t._v(" "),v("td",[t._v("可以匹配bat / but / b#t / b1t等")])]),t._v(" "),v("tr",[v("td",[t._v("\\w")]),t._v(" "),v("td",[t._v("匹配字母/数字/下划线")]),t._v(" "),v("td",[t._v("b\\wt")]),t._v(" "),v("td",[t._v("可以匹配bat / b1t / b_t等"),v("br"),t._v("但不能匹配b#t")])]),t._v(" "),v("tr",[v("td",[t._v("\\s")]),t._v(" "),v("td",[t._v("匹配空白字符（包括\\r、\\n、\\t等）")]),t._v(" "),v("td",[t._v("love\\syou")]),t._v(" "),v("td",[t._v("可以匹配love you")])]),t._v(" "),v("tr",[v("td",[t._v("\\d")]),t._v(" "),v("td",[t._v("匹配数字")]),t._v(" "),v("td",[t._v("\\d\\d")]),t._v(" "),v("td",[t._v("可以匹配01 / 23 / 99等")])]),t._v(" "),v("tr",[v("td",[t._v("\\b")]),t._v(" "),v("td",[t._v("匹配单词的边界")]),t._v(" "),v("td",[t._v("\\bThe\\b")]),t._v(" "),v("td")]),t._v(" "),v("tr",[v("td",[t._v("^")]),t._v(" "),v("td",[t._v("匹配字符串的开始")]),t._v(" "),v("td",[t._v("^The")]),t._v(" "),v("td",[t._v("可以匹配The开头的字符串")])]),t._v(" "),v("tr",[v("td",[t._v("$")]),t._v(" "),v("td",[t._v("匹配字符串的结束")]),t._v(" "),v("td",[t._v(".exe$")]),t._v(" "),v("td",[t._v("可以匹配.exe结尾的字符串")])]),t._v(" "),v("tr",[v("td",[t._v("\\W")]),t._v(" "),v("td",[t._v("匹配非字母/数字/下划线")]),t._v(" "),v("td",[t._v("b\\Wt")]),t._v(" "),v("td",[t._v("可以匹配b#t / b@t等"),v("br"),t._v("但不能匹配but / b1t / b_t等")])]),t._v(" "),v("tr",[v("td",[t._v("\\S")]),t._v(" "),v("td",[t._v("匹配非空白字符")]),t._v(" "),v("td",[t._v("love\\Syou")]),t._v(" "),v("td",[t._v("可以匹配love#you等"),v("br"),t._v("但不能匹配love you")])]),t._v(" "),v("tr",[v("td",[t._v("\\D")]),t._v(" "),v("td",[t._v("匹配非数字")]),t._v(" "),v("td",[t._v("\\d\\D")]),t._v(" "),v("td",[t._v("可以匹配9a / 3# / 0F等")])]),t._v(" "),v("tr",[v("td",[t._v("\\B")]),t._v(" "),v("td",[t._v("匹配非单词边界")]),t._v(" "),v("td",[t._v("\\Bio\\B")]),t._v(" "),v("td")]),t._v(" "),v("tr",[v("td",[t._v("[]")]),t._v(" "),v("td",[t._v("匹配来自字符集的任意单一字符")]),t._v(" "),v("td",[t._v("[aeiou]")]),t._v(" "),v("td",[t._v("可以匹配任一元音字母字符")])]),t._v(" "),v("tr",[v("td",[t._v("[^]")]),t._v(" "),v("td",[t._v("匹配不在字符集中的任意单一字符")]),t._v(" "),v("td",[t._v("[^aeiou]")]),t._v(" "),v("td",[t._v("可以匹配任一非元音字母字符")])]),t._v(" "),v("tr",[v("td",[t._v("*")]),t._v(" "),v("td",[t._v("匹配0次或多次")]),t._v(" "),v("td",[t._v("\\w*")]),t._v(" "),v("td")]),t._v(" "),v("tr",[v("td",[t._v("+")]),t._v(" "),v("td",[t._v("匹配1次或多次")]),t._v(" "),v("td",[t._v("\\w+")]),t._v(" "),v("td")]),t._v(" "),v("tr",[v("td",[t._v("?")]),t._v(" "),v("td",[t._v("匹配0次或1次")]),t._v(" "),v("td",[t._v("\\w?")]),t._v(" "),v("td")]),t._v(" "),v("tr",[v("td",[t._v("{N}")]),t._v(" "),v("td",[t._v("匹配N次")]),t._v(" "),v("td",[t._v("\\w{3}")]),t._v(" "),v("td")]),t._v(" "),v("tr",[v("td",[t._v("{M,}")]),t._v(" "),v("td",[t._v("匹配至少M次")]),t._v(" "),v("td",[t._v("\\w{3,}")]),t._v(" "),v("td")]),t._v(" "),v("tr",[v("td",[t._v("{M,N}")]),t._v(" "),v("td",[t._v("匹配至少M次至多N次")]),t._v(" "),v("td",[t._v("\\w{3,6}")]),t._v(" "),v("td")]),t._v(" "),v("tr",[v("td",[t._v("|")]),t._v(" "),v("td",[t._v("分支")]),t._v(" "),v("td",[t._v("foo|bar")]),t._v(" "),v("td",[t._v("可以匹配foo或者bar")])]),t._v(" "),v("tr",[v("td",[t._v("(?#)")]),t._v(" "),v("td",[t._v("注释")]),t._v(" "),v("td"),t._v(" "),v("td")]),t._v(" "),v("tr",[v("td",[t._v("(exp)")]),t._v(" "),v("td",[t._v("匹配exp并捕获到自动命名的组中")]),t._v(" "),v("td"),t._v(" "),v("td")]),t._v(" "),v("tr",[v("td",[t._v("(?<name>exp)")]),t._v(" "),v("td",[t._v("匹配exp并捕获到名为name的组中")]),t._v(" "),v("td"),t._v(" "),v("td")]),t._v(" "),v("tr",[v("td",[t._v("(?:exp)")]),t._v(" "),v("td",[t._v("匹配exp但是不捕获匹配的文本")]),t._v(" "),v("td"),t._v(" "),v("td")]),t._v(" "),v("tr",[v("td",[t._v("(?=exp)")]),t._v(" "),v("td",[t._v("匹配exp前面的位置")]),t._v(" "),v("td",[t._v("\\b\\w+(?=ing)")]),t._v(" "),v("td",[t._v("可以匹配I'm dancing中的danc")])]),t._v(" "),v("tr",[v("td",[t._v("(?<=exp)")]),t._v(" "),v("td",[t._v("匹配exp后面的位置")]),t._v(" "),v("td",[t._v("(?<=\\bdanc)\\w+\\b")]),t._v(" "),v("td",[t._v("可以匹配I love dancing and reading中的第一个ing")])]),t._v(" "),v("tr",[v("td",[t._v("(?!exp)")]),t._v(" "),v("td",[t._v("匹配后面不是exp的位置")]),t._v(" "),v("td"),t._v(" "),v("td")]),t._v(" "),v("tr",[v("td",[t._v("(?<!exp)")]),t._v(" "),v("td",[t._v("匹配前面不是exp的位置")]),t._v(" "),v("td"),t._v(" "),v("td")]),t._v(" "),v("tr",[v("td",[t._v("*?")]),t._v(" "),v("td",[t._v("重复任意次，但尽可能少重复")]),t._v(" "),v("td",[t._v("a.*b"),v("br"),t._v("a.*?b")]),t._v(" "),v("td",[t._v("将正则表达式应用于aabab，前者会匹配整个字符串aabab，后者会匹配aab和ab两个字符串")])]),t._v(" "),v("tr",[v("td",[t._v("+?")]),t._v(" "),v("td",[t._v("重复1次或多次，但尽可能少重复")]),t._v(" "),v("td"),t._v(" "),v("td")]),t._v(" "),v("tr",[v("td",[t._v("??")]),t._v(" "),v("td",[t._v("重复0次或1次，但尽可能少重复")]),t._v(" "),v("td"),t._v(" "),v("td")]),t._v(" "),v("tr",[v("td",[t._v("{M,N}?")]),t._v(" "),v("td",[t._v("重复M到N次，但尽可能少重复")]),t._v(" "),v("td"),t._v(" "),v("td")]),t._v(" "),v("tr",[v("td",[t._v("{M,}?")]),t._v(" "),v("td",[t._v("重复M次以上，但尽可能少重复")]),t._v(" "),v("td"),t._v(" "),v("td")])])]),t._v(" "),v("h2",{attrs:{id:"python中的使用方式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#python中的使用方式"}},[t._v("#")]),t._v(" Python中的使用方式")]),t._v(" "),v("blockquote",[v("ul",[v("li",[t._v("python中通过"),v("code",[t._v("re")]),t._v("来做正则表达式操作")]),t._v(" "),v("li",[t._v("Python正则表达式可以指定多种不同的限定符，如果多个，用"),v("code",[t._v("|")]),t._v("隔开")])])]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("限定符")]),t._v(" "),v("th",[t._v("含义")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("re.ASCII/re.A")]),t._v(" "),v("td",[t._v("只对ASCII字符有效❓(不懂)")])]),t._v(" "),v("tr",[v("td",[t._v("re.DEBUG")]),t._v(" "),v("td",[t._v("打印出匹配的debug信息")])]),t._v(" "),v("tr",[v("td",[t._v("re.I")]),t._v(" "),v("td",[t._v("忽略大小写")])]),t._v(" "),v("tr",[v("td",[t._v("re.D/re.DOTALL")]),t._v(" "),v("td",[v("code",[t._v(".")]),t._v("可以标识任意字符，包括换行符")])]),t._v(" "),v("tr",[v("td",[t._v("re.MULTILINE/re.M")]),t._v(" "),v("td",[t._v("$和^ 在多行下，正则表达式也需要是多行才能匹配，使用此模式，则会 每行根据$和^进行匹配")])]),t._v(" "),v("tr",[v("td",[t._v("re.L/re.LOCALE")]),t._v(" "),v("td",[t._v("对应的内联标识为❓")])]),t._v(" "),v("tr",[v("td",[t._v("re.VERBOSE/re.X")]),t._v(" "),v("td",[t._v("可在正则中添加注释，提高可读性，编译时，会忽略到注释")])])])]),t._v(" "),v("h3",{attrs:{id:"正则表达式对象"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式对象"}},[t._v("#")]),t._v(" 正则表达式对象")]),t._v(" "),v("blockquote",[v("ul",[v("li",[t._v("通过"),v("code",[t._v("re.compile(pattern,mode)")]),t._v("创建正则表达式对象")])])]),t._v(" "),v("div",{staticClass:"language-python extra-class"},[v("pre",{pre:!0,attrs:{class:"language-python"}},[v("code",[v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" re\n\n"),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建正则表达式对象")]),t._v("\nregex "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" re"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),v("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("compile")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token string"}},[t._v("'[a-z]+'")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" re"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("I"),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("re"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("D"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 和字符串匹配")]),t._v("\nmatcher "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" regex"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("match")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 没有匹配，返回为 None")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" matcher "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\tmatcher"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("group"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),v("h3",{attrs:{id:"match方法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#match方法"}},[t._v("#")]),t._v(" match方法")]),t._v(" "),v("blockquote",[v("ul",[v("li",[t._v("通过"),v("code",[t._v("re.match(pattern, str,mode)")]),t._v("创建匹配对象")])])]),t._v(" "),v("div",{staticClass:"language-python extra-class"},[v("pre",{pre:!0,attrs:{class:"language-python"}},[v("code",[v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" re\n\nmatcher "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" re"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("match")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.*'")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1112\\t43r34\\n'")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" re"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DOTALL"),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("re"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("I"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" matcher "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("matcher"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("group"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])}),[],!1,null,null,null);v.default=s.exports}}]);